registerPaint("connections",class{constructor(){this.CONNECTIONS_PROPS=["--connections-particleColor","--connections-lineColor","--connections-particleAmount","--connections-defaultRadius","--connections-variantRadius","--connections-linkRadius"]}static get inputProperties(){return["--connections-particleColor","--connections-lineColor","--connections-particleAmount","--connections-defaultRadius","--connections-variantRadius","--connections-linkRadius"]}parseProps(n){return["--connections-particleColor","--connections-lineColor","--connections-particleAmount","--connections-defaultRadius","--connections-variantRadius","--connections-linkRadius"].map(t=>n.get(t).toString().trim()||void 0)}checkDistance(n,t,o,e){return Math.sqrt(Math.pow(o-n,2)+Math.pow(e-t,2))}paint(n,t,o){const{width:e,height:i}=t,[c="rgb(74,74,74)",a="rgb(76,76,76)",r=e*i/1e3,s=1.5,l=3,u=80]=this.parseProps(o);let h=[];const[d,p,g]=a.match(/\d+/g),m=(t,o)=>{let e=+s+Math.random()*+l;return n.beginPath(),n.arc(t,o,e,0,2*Math.PI),n.fillStyle=c,n.fill(),{x:t,y:o}},P=t=>{for(let o=0;o<r;o++){let e=1-this.checkDistance(t.x,t.y,h[o].x,h[o].y)/u;e>0&&(n.lineWidth=.5,n.strokeStyle=`rgba(${d}, ${p}, ${g}, ${e})`,n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(h[o].x,h[o].y),n.closePath(),n.stroke())}};for(let n=0;n<r;n++){let n=Math.round(Math.random()*e),t=Math.round(Math.random()*i);h.push(m(n,t))}for(let n=0;n<r;n++)P(h[n])}});
